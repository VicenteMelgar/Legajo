# Generated by Django 5.1.3 on 2025-02-24 03:57

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Cargo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('denominacion', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Empleado',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('apellido_paterno', models.CharField(max_length=50)),
                ('apellido_materno', models.CharField(max_length=50)),
                ('nombres', models.CharField(max_length=50)),
                ('dni', models.CharField(blank=True, max_length=8, null=True, unique=True)),
                ('carnet_extranjeria', models.CharField(blank=True, max_length=15, null=True, unique=True)),
                ('sexo', models.CharField(blank=True, choices=[('F', 'Femenino'), ('M', 'Masculino')], max_length=1, null=True)),
                ('estado_civil', models.CharField(blank=True, choices=[('S', 'Soltero/a'), ('C', 'Casado/a')], max_length=10, null=True)),
                ('telefono', models.CharField(blank=True, max_length=12, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('modalidad', models.CharField(blank=True, choices=[('CAS', 'CAS'), ('Nombrado', 'Nombrado'), ('Cesante', 'Cesante')], max_length=25)),
                ('fecha_nacimiento', models.DateField(blank=True, null=True)),
                ('departamento', models.CharField(blank=True, choices=[('Amazonas', 'Amazonas'), ('Ancash', 'Ancash'), ('Apurimac', 'Apurimac'), ('Arequipa', 'Arequipa'), ('Ayacucho', 'Ayacucho'), ('Cajamarca', 'Cajamarca'), ('Callao', 'Callao'), ('Cusco', 'Cusco'), ('Huancavelica', 'Huancavelica'), ('Huanuco', 'Huanuco'), ('Ica', 'Ica'), ('Junin', 'Junín'), ('La Libertad', 'La Libertad'), ('Lambayeque', 'Lambayeque'), ('Lima', 'Lima'), ('Loreto', 'Loreto'), ('Madre de Dios', 'Madre de Dios'), ('Moquegua', 'Moquegua'), ('Pasco', 'Pasco'), ('Piura', 'Piura'), ('Puno', 'Puno'), ('San Martin', 'San Martín'), ('Tacna', 'Tacna'), ('Tumbes', 'Tumbes'), ('Ucayali', 'Ucayali')], max_length=50, null=True)),
                ('provincia', models.CharField(blank=True, max_length=50, null=True)),
                ('distrito', models.CharField(blank=True, max_length=50, null=True)),
                ('domicilio', models.CharField(blank=True, max_length=100, null=True)),
                ('cipss', models.CharField(blank=True, max_length=12, null=True)),
            ],
            options={
                'verbose_name': 'Empleado',
                'verbose_name_plural': 'Empleados',
                'ordering': ['apellido_paterno'],
            },
        ),
        migrations.CreateModel(
            name='Nivel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('denominacion', models.CharField(max_length=4)),
            ],
            options={
                'verbose_name': 'Nivel',
                'verbose_name_plural': 'Niveles',
            },
        ),
        migrations.CreateModel(
            name='Plaza',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('denominacion', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='Legajo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('regimen_laboral', models.CharField(choices=[('276', 'Régimen 276'), ('CAS', 'Contrato Administrativo de Servicios'), ('30057', 'Régimen de Servicio Civil')], max_length=100, verbose_name='Régimen Laboral')),
                ('fecha_creacion', models.DateField(auto_now_add=True)),
                ('activo', models.BooleanField(default=True)),
                ('empleado', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='legajos', to='legajos.empleado')),
            ],
        ),
        migrations.CreateModel(
            name='Laboral',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('documento_laboral', models.PositiveSmallIntegerField(choices=[(5, 'Controversias Individuales'), (10, 'Controversias Colectivas'), (15, 'Afiliación al Sindicato')], verbose_name='Relaciones Laborales')),
                ('documento', models.PositiveSmallIntegerField(choices=[(5, 'Resolución Administrativa'), (10, 'Resolución Directoral'), (15, 'Memorando')], verbose_name='Tipo de Documento')),
                ('descripcion', models.CharField(blank=True, max_length=250, null=True)),
                ('fecha', models.DateField(blank=True, null=True)),
                ('pdf', models.FileField(upload_to='documentos_laboral/', verbose_name='Cargar PDF')),
                ('fecha_carga', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de Carga')),
                ('legajo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='legajos.legajo')),
            ],
            options={
                'verbose_name': 'Relaciones Laborales',
                'verbose_name_plural': 'Relaciones Laborales',
                'ordering': ['documento'],
            },
        ),
        migrations.CreateModel(
            name='InfoPersonal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('documento', models.PositiveSmallIntegerField(choices=[(3, 'Ficha de datos'), (6, 'Documento Nacional de Identidad – DNI'), (9, 'Declaración jurada o Certificado de antecedentes penales'), (12, 'Declaración jurada o certificado de antecedentes policiales'), (15, 'Declaración Jurada de bienes y rentas'), (18, 'Declaración Jurada de no tener impedimentos (Ley N° 31419)'), (21, 'Partida de matrimonio o constancia de concubinato'), (24, 'Información de impedimentos e inhabilitaciones'), (27, 'DNI de el/la cónyuge o concubino/a'), (30, 'DNI de los/las hijos/as menores de edad'), (33, 'Certificado de discapacidad de el/la servidor/a'), (36, 'Certificado de discapacidad de los/las hijos/as'), (39, 'Declaración Jurada por Nepotismo'), (42, 'Otros Documentos')], verbose_name='Tipo de Documento')),
                ('fecha', models.DateField(blank=True, null=True)),
                ('pdf', models.FileField(upload_to='documentos_personales/', verbose_name='Cargar PDF')),
                ('legajo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='legajos.legajo')),
            ],
            options={
                'verbose_name': 'Información Personal',
                'verbose_name_plural': 'Información Personal',
                'ordering': ['documento', 'fecha'],
            },
        ),
        migrations.CreateModel(
            name='Induccion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('documento', models.PositiveSmallIntegerField(choices=[(3, 'Registro de Inducción'), (6, 'Cargo de entrega de perfil de puesto y funciones'), (9, 'Cargo de entrega de reglamento interno de servidores civiles'), (12, 'Cargo de entrega de código de conducta y ética')], verbose_name='Tipo de Documento')),
                ('fecha', models.DateField(blank=True, null=True)),
                ('pdf', models.FileField(upload_to='documentos_induccion/', verbose_name='Cargar PDF')),
                ('legajo', models.ManyToManyField(to='legajos.legajo')),
            ],
            options={
                'verbose_name': 'Inducción del Personal',
                'verbose_name_plural': 'Inducción del Personal',
                'ordering': ['documento'],
            },
        ),
        migrations.CreateModel(
            name='Experiencia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('institucion', models.CharField(blank=True, max_length=250, null=True, verbose_name='Institución o Empresa')),
                ('documento', models.PositiveSmallIntegerField(blank=True, choices=[(3, 'Certificado'), (6, 'Constancia'), (9, 'Resolución'), (12, 'Memorando')], null=True, verbose_name='Tipo de Documento')),
                ('cargo', models.CharField(max_length=250)),
                ('descripcion', models.CharField(max_length=1500)),
                ('fecha_inicio', models.DateField()),
                ('fecha_fin', models.DateField()),
                ('fecha_expedicion', models.DateField(blank=True, null=True)),
                ('pdf', models.FileField(upload_to='experiencia_laboral/', verbose_name='Cargar PDF')),
                ('legajo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='legajos.legajo')),
            ],
            options={
                'verbose_name': 'Experiencia Laboral',
                'verbose_name_plural': 'Experiencia Laboral',
                'ordering': ['-fecha_inicio'],
            },
        ),
        migrations.CreateModel(
            name='Evaluacion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('periodo', models.CharField(blank=True, max_length=50, null=True)),
                ('fecha', models.DateField(blank=True, null=True)),
                ('documento', models.PositiveSmallIntegerField(choices=[(5, 'Factores de evaluación'), (10, 'Registro de evidencias'), (15, 'Formato de reunión de seguimiento'), (20, 'Notificación de evaluación obtenida'), (25, 'Acta de retroalimentación de resultados de desempeño'), (30, 'Plan de mejora')], verbose_name='Tipo de Documento')),
                ('puntaje', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('pdf', models.FileField(upload_to='documentos_evaluacion/', verbose_name='Cargar PDF')),
                ('fecha_carga', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de Carga')),
                ('legajo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='legajos.legajo')),
            ],
            options={
                'verbose_name': 'Evaluación de Desempeño',
                'verbose_name_plural': 'Evaluación de Desempeño',
                'ordering': ['documento', '-fecha'],
            },
        ),
        migrations.CreateModel(
            name='EstudiosRealizados',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('inicio', models.DateField()),
                ('fin', models.DateField()),
                ('grado_instruccion', models.PositiveSmallIntegerField(choices=[(10, 'Secundaria Completa'), (20, 'Superior Técnica Incompleta'), (30, 'Superior Técnica'), (40, 'Superior Universitario Incompleta'), (50, 'Superior Universitario'), (60, 'Especialidad'), (70, 'Maestría'), (80, 'Doctorado')], verbose_name='Grado de Instrucción')),
                ('especialidad', models.CharField(blank=True, max_length=50, null=True)),
                ('fecha_expedicion', models.DateField(blank=True, null=True)),
                ('pdf', models.FileField(upload_to='formacion_academica/', verbose_name='Cargar PDF')),
                ('legajo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='legajos.legajo')),
            ],
            options={
                'verbose_name': 'Estudio Realizado',
                'verbose_name_plural': 'Estudios Realizados',
                'ordering': ['-fecha_expedicion'],
            },
        ),
        migrations.CreateModel(
            name='Desvinculacion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('documento', models.PositiveSmallIntegerField(choices=[(5, 'Resolución de término de designación'), (10, 'Resolución de término del servicio civil de carrera'), (15, 'Memorando  de término de vínculo del servicio civil'), (20, 'Informe de Gestión'), (25, 'Entrega de cargo/puesto'), (30, 'Liquidación de beneficios sociales y/o pensión'), (35, 'Carta de no renovación de contrato a plazo determinado')], verbose_name='Desvinculación')),
                ('descripcion', models.CharField(blank=True, max_length=250, null=True)),
                ('fecha', models.DateField(blank=True, null=True)),
                ('pdf', models.FileField(upload_to='documentos_desvinculacion/', verbose_name='Cargar PDF')),
                ('fecha_carga', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de Carga')),
                ('legajo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='legajos.legajo')),
            ],
            options={
                'verbose_name': 'Desvinculación',
                'verbose_name_plural': 'Desvinculación',
                'ordering': ['documento'],
            },
        ),
        migrations.CreateModel(
            name='Curso',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('documento', models.PositiveSmallIntegerField(choices=[(3, 'Especialización'), (6, 'Diplomado'), (9, 'Congreso'), (12, 'Convención'), (15, 'Conferencia'), (18, 'Curso de capacitación'), (21, 'Seminario'), (24, 'Simposio'), (27, 'Charla'), (30, 'Taller'), (33, 'Certificado'), (36, 'Constancia')], verbose_name='Tipo de Documento')),
                ('descripcion', models.CharField(max_length=250)),
                ('inicio', models.DateField(blank=True, null=True)),
                ('fin', models.DateField(blank=True, null=True)),
                ('duracion', models.CharField(blank=True, max_length=250, null=True)),
                ('fecha_expedicion', models.DateField(blank=True, null=True)),
                ('pdf', models.FileField(upload_to='cursos/', verbose_name='Cargar PDF')),
                ('legajo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='legajos.legajo')),
            ],
            options={
                'verbose_name': 'Especializaciones, Diplomados, Cursos, Talleres',
                'verbose_name_plural': 'Especializaciones, Diplomados, Cursos, Talleres',
                'ordering': ['-fecha_expedicion'],
            },
        ),
        migrations.CreateModel(
            name='Compensaciones',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('resolucion', models.CharField(max_length=50, unique=True)),
                ('fecha', models.DateField()),
                ('motivo', models.PositiveSmallIntegerField(blank=True, choices=[(5, 'Por cumplir 25 años de Servicios'), (10, 'Por cumplir 30 años de Servicios')], null=True)),
                ('porcentaje', models.DecimalField(decimal_places=2, max_digits=5)),
                ('anios', models.IntegerField(verbose_name='años')),
                ('meses', models.IntegerField()),
                ('dias', models.IntegerField()),
                ('pdf', models.FileField(upload_to='compensaciones/', verbose_name='Cargar PDF')),
                ('legajo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='legajos.legajo')),
            ],
            options={
                'verbose_name': 'Compensación',
                'verbose_name_plural': 'Compensaciones',
            },
        ),
        migrations.CreateModel(
            name='Colegiatura',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('documento', models.PositiveSmallIntegerField(choices=[(10, 'Colegiatura'), (20, 'Habilitación Profesional'), (30, 'SERUM')], verbose_name='Tipo de Documento')),
                ('fecha_emision', models.DateField()),
                ('fecha_vigencia', models.DateField(blank=True, null=True, verbose_name='Válido Hasta')),
                ('pdf', models.FileField(upload_to='documentos_colegiatura/', verbose_name='Cargar PDF')),
                ('legajo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='legajos.legajo')),
            ],
            options={
                'verbose_name': 'Colegiatura',
                'verbose_name_plural': 'Colegiatura',
                'ordering': ['documento', '-fecha_emision'],
            },
        ),
        migrations.CreateModel(
            name='Movimientos',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('documento', models.CharField(max_length=50)),
                ('tipo', models.PositiveSmallIntegerField(blank=True, choices=[(5, 'LSGH'), (10, 'LCGH')], null=True, verbose_name='Tipo de Licencia')),
                ('motivo', models.CharField(max_length=50)),
                ('asunto', models.CharField(max_length=50)),
                ('desde', models.DateField()),
                ('hasta', models.DateField(blank=True, null=True)),
                ('total_dias', models.PositiveIntegerField(blank=True, null=True, verbose_name='Total de Días')),
                ('pdf', models.FileField(upload_to='movimientos_personal/', verbose_name='Cargar PDF')),
                ('legajo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='legajos.legajo')),
            ],
            options={
                'verbose_name': 'Movimientos del Personal',
                'verbose_name_plural': 'Movimientos del Personal',
                'ordering': ['-desde'],
            },
        ),
        migrations.CreateModel(
            name='Desplazamiento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('documento', models.PositiveSmallIntegerField(choices=[(5, 'Resolución Administrativa'), (10, 'Resolución Directoral'), (15, 'Memorando')], verbose_name='Tipo de Documento')),
                ('numero', models.CharField(max_length=50, unique=True, verbose_name='Número')),
                ('tipo', models.PositiveSmallIntegerField(blank=True, choices=[(5, 'Designación'), (10, 'Rotación'), (15, 'Destaque'), (20, 'Encargatura')], null=True)),
                ('asunto', models.CharField(blank=True, max_length=100)),
                ('fecha', models.DateField()),
                ('fecha_vigencia', models.DateField(blank=True, null=True, verbose_name='Fecha de Finalización')),
                ('pdf', models.FileField(upload_to='documentos_desplazamiento/', verbose_name='Cargar PDF')),
                ('cargo', models.ManyToManyField(blank=True, to='legajos.cargo')),
                ('legajo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='legajos.legajo')),
                ('nivel', models.ManyToManyField(blank=True, to='legajos.nivel')),
                ('plaza', models.ManyToManyField(blank=True, to='legajos.plaza')),
            ],
            options={
                'verbose_name': 'Desplazamiento',
                'verbose_name_plural': 'Desplazamiento',
                'ordering': ['-fecha'],
            },
        ),
        migrations.CreateModel(
            name='Progresion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('documento', models.PositiveSmallIntegerField(choices=[(5, 'Resolución Administrativa'), (10, 'Resolución Directoral'), (15, 'Memorando')], verbose_name='Tipo de Documento')),
                ('numero', models.CharField(blank=True, max_length=100, null=True)),
                ('motivo', models.PositiveSmallIntegerField(blank=True, choices=[(5, 'Ascenso'), (10, 'Cambio de grupo Ocupacional')], null=True, verbose_name='Motivo')),
                ('fecha', models.DateField(blank=True, null=True)),
                ('pdf', models.FileField(upload_to='documentos_progresion/', verbose_name='Cargar PDF')),
                ('fecha_carga', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de Carga')),
                ('legajo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='legajos.legajo')),
                ('nivel', models.ManyToManyField(blank=True, to='legajos.nivel')),
            ],
            options={
                'verbose_name': 'Progresión en la Carrera',
                'verbose_name_plural': 'Progresión en la Carrera',
                'ordering': ['documento'],
            },
        ),
        migrations.CreateModel(
            name='Prueba',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('documento', models.PositiveSmallIntegerField(choices=[(3, 'Evaluación y resultados del período de prueba')], verbose_name='Tipo de Documento')),
                ('fecha', models.DateField(blank=True, null=True)),
                ('pdf', models.FileField(upload_to='documentos_prueba/', verbose_name='Cargar PDF')),
                ('legajo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='legajos.legajo')),
            ],
            options={
                'verbose_name': 'Período de Prueba',
                'verbose_name_plural': 'Período de Prueba',
                'ordering': ['documento'],
            },
        ),
        migrations.CreateModel(
            name='Reconocimiento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('documento_reconocimiento', models.PositiveSmallIntegerField(choices=[(5, 'Reconocimiento'), (10, 'Sanción')], verbose_name='Reconocimientos y Sanciones')),
                ('documento', models.PositiveSmallIntegerField(choices=[(5, 'Resolución Administrativa'), (10, 'Resolución Directoral'), (15, 'Memorando')], verbose_name='Tipo de Documento')),
                ('descripcion', models.CharField(blank=True, max_length=250, null=True)),
                ('fecha', models.DateField(blank=True, null=True)),
                ('pdf', models.FileField(upload_to='documentos_reconocimiento/', verbose_name='Cargar PDF')),
                ('fecha_carga', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de Carga')),
                ('legajo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='legajos.legajo')),
            ],
            options={
                'verbose_name': 'Reconocimientos y Sanciones',
                'verbose_name_plural': 'Reconocimientos y Sanciones',
                'ordering': ['documento'],
            },
        ),
        migrations.CreateModel(
            name='Seguridad',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('documento', models.PositiveSmallIntegerField(choices=[(5, 'Cargo de entrega del Reglamento de SST'), (10, 'Registro de entrenamiento, y simulacros de emergencias'), (15, 'Capacitaciones brindadas por la entidad'), (20, 'Trámites y gestiones de seguro'), (25, 'Trámites y gestiones de subsidios'), (30, 'Descanso Médico'), (35, 'Afiliaciones a Entidades Prestadoras de Salud (EPS)')], verbose_name='SST y Bienestar social')),
                ('descripcion', models.CharField(blank=True, max_length=250, null=True)),
                ('fecha', models.DateField(blank=True, null=True, verbose_name='Fecha de Inicio')),
                ('fecha_vigencia', models.DateField(blank=True, null=True, verbose_name='Fecha de Vigencia')),
                ('pdf', models.FileField(upload_to='documentos_sst/', verbose_name='Cargar PDF')),
                ('fecha_carga', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de Carga')),
                ('legajo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='legajos.legajo')),
            ],
            options={
                'verbose_name': 'SST y Bienestar social',
                'verbose_name_plural': 'SST y Bienestar social',
                'ordering': ['documento'],
            },
        ),
        migrations.CreateModel(
            name='Seleccion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('documento', models.PositiveSmallIntegerField(choices=[(3, 'Resultado Final de proceso de selección'), (6, 'Informe de la Oficina de Personal')], verbose_name='Tipo de Documento')),
                ('fecha', models.DateField(blank=True, null=True)),
                ('descripcion', models.CharField(blank=True, max_length=250, verbose_name='Descripción')),
                ('pdf', models.FileField(upload_to='documentos_seleccion/', verbose_name='Cargar PDF')),
                ('legajo', models.ManyToManyField(to='legajos.legajo')),
            ],
            options={
                'verbose_name': 'Proceso de Selección',
                'verbose_name_plural': 'Proceso de Selección',
                'ordering': ['documento'],
            },
        ),
        migrations.CreateModel(
            name='Subespecialidad',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('inicio', models.DateField()),
                ('fin', models.DateField()),
                ('documento', models.PositiveSmallIntegerField(choices=[(10, 'Especialidad'), (20, 'Subespecialidad')], verbose_name='Especialidad o Subespecialidad')),
                ('mencion', models.CharField(max_length=50, verbose_name='Mención')),
                ('cod_especialidad', models.CharField(blank=True, max_length=50, null=True, verbose_name='Nº de RNE')),
                ('fecha_expedicion', models.DateField(blank=True, null=True)),
                ('pdf', models.FileField(upload_to='formacion_academica/', verbose_name='Cargar PDF')),
                ('legajo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='legajos.legajo')),
            ],
            options={
                'verbose_name': 'Subespecialidad',
                'verbose_name_plural': 'Subespecialidad',
                'ordering': ['-fecha_expedicion'],
            },
        ),
        migrations.CreateModel(
            name='Vinculo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('documento', models.PositiveSmallIntegerField(choices=[(5, 'Resolución Administrativa'), (10, 'Resolución Directoral'), (15, 'Memorando')], verbose_name='Tipo de Documento')),
                ('numero', models.CharField(max_length=50, unique=True, verbose_name='Número')),
                ('tipo', models.PositiveSmallIntegerField(blank=True, choices=[(5, 'Nombramiento'), (10, 'Reasignación'), (15, 'Contrato a plazo fijo'), (20, 'Destaque de otra Dependencia'), (25, 'Designación de otra Dependencia')], null=True)),
                ('descripcion', models.CharField(blank=True, max_length=100)),
                ('fecha', models.DateField(verbose_name='Fecha del Documento')),
                ('fecha_vigencia', models.DateField(verbose_name='Fecha de Inicio de Vínculo')),
                ('fecha_fin', models.DateField(blank=True, null=True, verbose_name='Fecha de Finalización')),
                ('pdf', models.FileField(upload_to='documentos_vinculo/', verbose_name='Cargar PDF')),
                ('cargo', models.ManyToManyField(blank=True, to='legajos.cargo')),
                ('legajo', models.ManyToManyField(to='legajos.legajo')),
                ('nivel', models.ManyToManyField(blank=True, to='legajos.nivel')),
                ('plaza', models.ManyToManyField(blank=True, to='legajos.plaza')),
            ],
            options={
                'verbose_name': 'Formalización de Vínculo',
                'verbose_name_plural': 'Formalización de Vínculo',
                'ordering': ['-fecha'],
            },
        ),
        migrations.CreateModel(
            name='Retencion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('documento', models.PositiveSmallIntegerField(choices=[(5, 'Exoneración de retención de cuarta categoría'), (10, 'Exoneración de retención de quinta categoría'), (15, 'Liquidación de beneficios sociales'), (20, 'Pago de compensación económica')], verbose_name='Tipo de Documento')),
                ('pdf', models.FileField(upload_to='documentos_retencion/', verbose_name='Cargar PDF')),
                ('fecha_carga', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de Carga')),
                ('legajo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='legajos.legajo')),
            ],
            options={
                'verbose_name': 'Exoneración de Retención',
                'verbose_name_plural': 'Exoneración de Retención',
                'ordering': ['documento'],
                'unique_together': {('legajo', 'documento')},
            },
        ),
    ]
