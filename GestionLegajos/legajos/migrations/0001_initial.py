# Generated by Django 5.1.3 on 2025-03-10 03:07

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Empleado',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('apellido_paterno', models.CharField(max_length=50)),
                ('apellido_materno', models.CharField(max_length=50)),
                ('nombres', models.CharField(max_length=50)),
                ('documento_identidad', models.CharField(choices=[('DNI', 'Documento Nacional de Identidad'), ('Carnet de Extranjería', 'Carnet de Extranjería')], max_length=100)),
                ('numero_documento', models.CharField(max_length=15, unique=True)),
                ('sexo', models.CharField(blank=True, choices=[('F', 'Femenino'), ('M', 'Masculino')], max_length=1, null=True)),
                ('estado_civil', models.CharField(blank=True, choices=[('S', 'Soltero/a'), ('C', 'Casado/a')], max_length=10, null=True)),
                ('telefono', models.CharField(blank=True, max_length=12, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('fecha_nacimiento', models.DateField(blank=True, null=True)),
                ('departamento', models.CharField(blank=True, choices=[('Amazonas', 'Amazonas'), ('Ancash', 'Ancash'), ('Apurimac', 'Apurimac'), ('Arequipa', 'Arequipa'), ('Ayacucho', 'Ayacucho'), ('Cajamarca', 'Cajamarca'), ('Callao', 'Callao'), ('Cusco', 'Cusco'), ('Huancavelica', 'Huancavelica'), ('Huanuco', 'Huanuco'), ('Ica', 'Ica'), ('Junin', 'Junín'), ('La Libertad', 'La Libertad'), ('Lambayeque', 'Lambayeque'), ('Lima', 'Lima'), ('Loreto', 'Loreto'), ('Madre de Dios', 'Madre de Dios'), ('Moquegua', 'Moquegua'), ('Pasco', 'Pasco'), ('Piura', 'Piura'), ('Puno', 'Puno'), ('San Martin', 'San Martín'), ('Tacna', 'Tacna'), ('Tumbes', 'Tumbes'), ('Ucayali', 'Ucayali')], max_length=50, null=True)),
                ('provincia', models.CharField(blank=True, max_length=50, null=True)),
                ('distrito', models.CharField(blank=True, max_length=50, null=True)),
                ('domicilio', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'verbose_name': 'Empleado',
                'verbose_name_plural': 'Empleados',
                'ordering': ['apellido_paterno'],
            },
        ),
        migrations.CreateModel(
            name='Legajo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('regimen_laboral', models.CharField(choices=[('276', 'Régimen del Decreto Legislativo 276'), ('CAS', 'Contrato Administrativo de Servicios'), ('30057', 'Régimen de Servicio Civil')], max_length=100, verbose_name='Régimen Laboral')),
                ('fecha_creacion', models.DateField(auto_now_add=True)),
                ('activo', models.BooleanField(default=True)),
                ('empleado', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='legajos', to='legajos.empleado')),
            ],
        ),
        migrations.CreateModel(
            name='Laboral',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('documento', models.CharField(blank=True, max_length=250, null=True, verbose_name='Tipo de Documento')),
                ('documento_laboral', models.PositiveSmallIntegerField(choices=[(10, 'Controversias Individuales'), (20, 'Controversias Colectivas'), (30, 'Afiliación al Sindicato')], verbose_name='Relaciones Laborales')),
                ('descripcion', models.CharField(blank=True, max_length=250, null=True)),
                ('fecha', models.DateField(blank=True, null=True)),
                ('pdf', models.FileField(upload_to='documentos_laboral/', verbose_name='Cargar PDF')),
                ('fecha_carga', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de Carga')),
                ('legajo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='legajos.legajo')),
            ],
            options={
                'verbose_name': 'Relaciones Laborales',
                'verbose_name_plural': 'Relaciones Laborales',
                'ordering': ['documento'],
            },
        ),
        migrations.CreateModel(
            name='InfoPersonal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('documento', models.CharField(choices=[('Ficha de datos', 'Ficha de datos'), ('Documento Nacional de Identidad – DNI', 'Documento Nacional de Identidad – DNI'), ('Declaración jurada o Certificado de antecedentes penales', 'Declaración jurada o Certificado de antecedentes penales'), ('Declaración jurada o certificado de antecedentes policiales', 'Declaración jurada o certificado de antecedentes policiales'), ('Declaración Jurada de bienes y rentas', 'Declaración Jurada de bienes y rentas'), ('Declaración Jurada de no tener impedimentos (Ley N° 31419)', 'Declaración Jurada de no tener impedimentos (Ley N° 31419)'), ('Partida de matrimonio o constancia de concubinato', 'Partida de matrimonio o constancia de concubinato'), ('Información de impedimentos e inhabilitaciones', 'Información de impedimentos e inhabilitaciones'), ('DNI de el/la cónyuge o concubino/a', 'DNI de el/la cónyuge o concubino/a'), ('DNI de los/las hijos/as menores de edad', 'DNI de los/las hijos/as menores de edad'), ('Certificado de discapacidad de el/la servidor/a', 'Certificado de discapacidad de el/la servidor/a'), ('Certificado de discapacidad de los/las hijos/as', 'Certificado de discapacidad de los/las hijos/as'), ('Declaración Jurada por Nepotismo', 'Declaración Jurada por Nepotismo'), ('Otro Documento', 'Otro Documento')], max_length=100, verbose_name='Tipo de Documento')),
                ('documento_otro', models.CharField(blank=True, max_length=100, verbose_name='Especificar otro documento')),
                ('fecha', models.DateField(blank=True, null=True)),
                ('pdf', models.FileField(upload_to='documentos_personales/', verbose_name='Cargar PDF')),
                ('legajo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='legajos.legajo')),
            ],
            options={
                'verbose_name': 'Información Personal',
                'verbose_name_plural': 'Información Personal',
                'ordering': ['documento', '-fecha'],
            },
        ),
        migrations.CreateModel(
            name='Induccion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('documento', models.PositiveSmallIntegerField(choices=[(10, 'Registro de Inducción'), (20, 'Cargo de entrega de perfil de puesto y funciones'), (30, 'Cargo de entrega de reglamento interno de servidores civiles'), (40, 'Cargo de entrega de código de conducta y ética')], verbose_name='Tipo de Documento')),
                ('fecha', models.DateField(blank=True, null=True)),
                ('pdf', models.FileField(upload_to='documentos_induccion/', verbose_name='Cargar PDF')),
                ('legajo', models.ManyToManyField(to='legajos.legajo')),
            ],
            options={
                'verbose_name': 'Inducción del Personal',
                'verbose_name_plural': 'Inducción del Personal',
                'ordering': ['documento'],
            },
        ),
        migrations.CreateModel(
            name='Final',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('documento', models.PositiveSmallIntegerField(choices=[(10, 'Resolución Administrativa'), (20, 'Resolución Directoral'), (30, 'Memorando')], verbose_name='Tipo de Documento')),
                ('numero', models.CharField(max_length=50, unique=True, verbose_name='Número')),
                ('descripcion', models.CharField(blank=True, max_length=100)),
                ('fecha', models.DateField(verbose_name='Fecha del Documento')),
                ('fecha_fin', models.DateField(blank=True, null=True, verbose_name='Fecha de Finalización')),
                ('condicion_laboral', models.CharField(choices=[('Nombrado', 'Nombrado'), ('Contratado', 'Contratado a Plazo Fijo'), ('CAS', 'Contrato Administrativo de Servicios')], max_length=100)),
                ('grupo_ocupacional', models.CharField(choices=[('Auxiliares', 'Auxiliares'), ('Funcionarios y Directivos', 'Funcionarios y Directivos'), ('Profesionales', 'Profesionales'), ('Profesionales de la Salud', 'Profesionales de la Salud'), ('Tecnicos', 'Tecnicos')], max_length=100)),
                ('cargo', models.CharField(blank=True, choices=[('ASISTENTE EJECUTIVO II', 'ASISTENTE EJECUTIVO II'), ('ASISTENTE EN SERVICIOS DE SALUD I', 'ASISTENTE EN SERVICIOS DE SALUD I'), ('ASISTENTE PROFESIONAL I', 'ASISTENTE PROFESIONAL I'), ('ASISTENTE/A ADMINISTRATIVO/A I', 'ASISTENTE/A ADMINISTRATIVO/A I'), ('AUXILIAR ADMINISTRATIVO/A', 'AUXILIAR ADMINISTRATIVO/A'), ('AUXILIAR ASISTENCIAL', 'AUXILIAR ASISTENCIAL'), ('DIRECTOR ADJUNTO', 'DIRECTOR ADJUNTO'), ('DIRECTOR DE HOSPITAL III', 'DIRECTOR DE HOSPITAL III'), ('DIRECTOR/A EJECUTIVO/A', 'DIRECTOR/A EJECUTIVO/A'), ('ENFERMERA/O', 'ENFERMERA/O'), ('ENFERMERA/O ESPECIALISTA', 'ENFERMERA/O ESPECIALISTA'), ('ESPECIALISTA ADMINISTRATIVO I', 'ESPECIALISTA ADMINISTRATIVO I'), ('ESPECIALISTA EN SALUD PUBLICA I', 'ESPECIALISTA EN SALUD PUBLICA I'), ('JEFE DE OFICINA', 'JEFE DE OFICINA'), ('JEFE DE ORGANO DE CONTROL INSTITUCIONAL', 'JEFE DE ORGANO DE CONTROL INSTITUCIONAL'), ('MEDICO', 'MEDICO'), ('MEDICO ESPECIALISTA', 'MEDICO ESPECIALISTA'), ('NUTRICIONISTA', 'NUTRICIONISTA'), ('ODONTOLOGO', 'ODONTOLOGO'), ('PILOTO DE AMBULANCIA', 'PILOTO DE AMBULANCIA'), ('PSICOLOGO', 'PSICOLOGO'), ('QUIMICO FARMACEUTICO', 'QUIMICO FARMACEUTICO'), ('TECNICO ADMINISTRATIVO I', 'TECNICO ADMINISTRATIVO I'), ('TECNICO ADMINISTRATIVO III', 'TECNICO ADMINISTRATIVO III'), ('TECNICO ASISTENCIAL', 'TECNICO ASISTENCIAL'), ('TECNICO EN ARCHIVO', 'TECNICO EN ARCHIVO'), ('TECNICO EN ENFERMERIA', 'TECNICO EN ENFERMERIA'), ('TECNICO EN ENFERMERIA I', 'TECNICO EN ENFERMERIA I'), ('TECNICO EN FARMACIA I', 'TECNICO EN FARMACIA I'), ('TECNICO EN LABORATORIO I', 'TECNICO EN LABORATORIO I'), ('TECNICO EN NUTRICION I', 'TECNICO EN NUTRICION I'), ('TECNICO EN PLANIFICACION', 'TECNICO EN PLANIFICACION'), ('TECNICO EN REHABILITACION', 'TECNICO EN REHABILITACION'), ('TECNICO EN SERVICIOS GENERALES I', 'TECNICO EN SERVICIOS GENERALES I'), ('TECNICO ESPECIALIZADO', 'TECNICO ESPECIALIZADO'), ('TECNICO/A ADMINISTRATIVO/A II', 'TECNICO/A ADMINISTRATIVO/A II'), ('TECNOLOGO MEDICO', 'TECNOLOGO MEDICO'), ('TRABAJADOR DE SERVICIOS GENERALES', 'TRABAJADOR DE SERVICIOS GENERALES'), ('TRABAJADOR SOCIAL', 'TRABAJADOR DE SERVICIOS GENERALES')], max_length=100, null=True)),
                ('nivel', models.CharField(blank=True, choices=[('CD-I', 'CD-I'), ('CD-V', 'CD-V'), ('ENF-10', 'ENF-10'), ('ENF-11', 'ENF-11'), ('ENF-12', 'ENF-12'), ('ENF-13', 'ENF-13'), ('ENF-14', 'ENF-14'), ('F-3', 'F-3'), ('F-4', 'F-4'), ('F-5', 'F-5'), ('G5-V', 'G5-V'), ('MC-1', 'MC-1'), ('MC-2', 'MC-2'), ('MC-3', 'MC-3'), ('MC-4', 'MC-4'), ('MC-5', 'MC-5'), ('OPS-IV', 'OPS-IV'), ('OPS-V', 'OPS-V'), ('OPS-VIII', 'OPS-VIII'), ('PS-IV', 'PS-IV'), ('PS-V', 'PS-V'), ('PS-VI', 'PS-VI'), ('PS-VII', 'PS-VII'), ('PS-VIII', 'PS-VIII'), ('SAA', 'SAA'), ('SAB', 'SAB'), ('SAC', 'SAC'), ('SAD', 'SAD'), ('SAF', 'SAF'), ('SPC', 'SPC'), ('SPD', 'SPD'), ('SPE', 'SPE'), ('SPF', 'SPF'), ('STA', 'STA'), ('STB', 'STB'), ('STC', 'STC'), ('STD', 'STD'), ('STE', 'STE'), ('STF', 'STF'), ('TM-1', 'TM-1'), ('TM-2', 'TM-2')], max_length=100, null=True)),
                ('plaza', models.CharField(blank=True, max_length=10, null=True)),
                ('pdf', models.FileField(upload_to='documentos_final/', verbose_name='Cargar PDF')),
                ('legajo', models.ManyToManyField(to='legajos.legajo')),
            ],
            options={
                'verbose_name': 'Resolución de Finalización de Vínculo',
                'verbose_name_plural': 'Resolución de Finalización de Vínculo',
                'ordering': ['-fecha'],
            },
        ),
        migrations.CreateModel(
            name='Experiencia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('institucion', models.CharField(blank=True, max_length=250, null=True, verbose_name='Institución o Empresa')),
                ('documento', models.PositiveSmallIntegerField(blank=True, choices=[(10, 'Certificado'), (20, 'Constancia'), (30, 'Resolución'), (40, 'Memorando')], null=True, verbose_name='Tipo de Documento')),
                ('numero', models.CharField(blank=True, max_length=50, null=True, unique=True, verbose_name='Número')),
                ('cargo', models.CharField(max_length=250)),
                ('fecha_inicio', models.DateField()),
                ('fecha_fin', models.DateField()),
                ('cargo2', models.CharField(blank=True, max_length=250, null=True, verbose_name='Cargo 2')),
                ('fecha_inicio2', models.DateField(blank=True, null=True, verbose_name='Fecha Inicio 2')),
                ('fecha_fin2', models.DateField(blank=True, null=True, verbose_name='Fecha Fin 2')),
                ('cargo3', models.CharField(blank=True, max_length=250, null=True, verbose_name='Cargo 3')),
                ('fecha_inicio3', models.DateField(blank=True, null=True, verbose_name='Fecha Inicio 3')),
                ('fecha_fin3', models.DateField(blank=True, null=True, verbose_name='Fecha Fin 3')),
                ('cargo4', models.CharField(blank=True, max_length=250, null=True, verbose_name='Cargo 4')),
                ('fecha_inicio4', models.DateField(blank=True, null=True, verbose_name='Fecha Inicio 4')),
                ('fecha_fin4', models.DateField(blank=True, null=True, verbose_name='Fecha Fin 4')),
                ('cargo5', models.CharField(blank=True, max_length=250, null=True, verbose_name='Cargo 5')),
                ('fecha_inicio5', models.DateField(blank=True, null=True, verbose_name='Fecha Inicio 5')),
                ('fecha_fin5', models.DateField(blank=True, null=True, verbose_name='Fecha Fin 5')),
                ('fecha_expedicion', models.DateField(blank=True, null=True)),
                ('pdf', models.FileField(upload_to='experiencia_laboral/', verbose_name='Cargar PDF')),
                ('legajo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='legajos.legajo')),
            ],
            options={
                'verbose_name': 'Experiencia Laboral',
                'verbose_name_plural': 'Experiencia Laboral',
                'ordering': ['-fecha_inicio'],
            },
        ),
        migrations.CreateModel(
            name='Evaluacion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('documento', models.PositiveSmallIntegerField(choices=[(10, 'Factores de evaluación'), (20, 'Registro de evidencias'), (30, 'Formato de reunión de seguimiento'), (40, 'Notificación de evaluación obtenida'), (50, 'Acta de retroalimentación de resultados de desempeño'), (60, 'Plan de mejora')], verbose_name='Tipo de Documento')),
                ('periodo', models.CharField(blank=True, max_length=50, null=True)),
                ('fecha', models.DateField(blank=True, null=True)),
                ('puntaje', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('pdf', models.FileField(upload_to='documentos_evaluacion/', verbose_name='Cargar PDF')),
                ('legajo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='legajos.legajo')),
            ],
            options={
                'verbose_name': 'Evaluación de Desempeño',
                'verbose_name_plural': 'Evaluación de Desempeño',
                'ordering': ['documento', '-fecha'],
            },
        ),
        migrations.CreateModel(
            name='EstudiosRealizados',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('inicio', models.DateField()),
                ('fin', models.DateField()),
                ('grado_instruccion', models.PositiveSmallIntegerField(choices=[(10, 'Secundaria Completa'), (20, 'Superior Técnica Incompleta'), (30, 'Superior Técnica'), (40, 'Superior Universitario Incompleta'), (50, 'Superior Universitario'), (60, 'Especialidad'), (70, 'Maestría'), (80, 'Doctorado')], verbose_name='Grado de Instrucción')),
                ('especialidad', models.CharField(blank=True, max_length=50, null=True)),
                ('fecha_expedicion', models.DateField(blank=True, null=True)),
                ('pdf', models.FileField(upload_to='formacion_academica/', verbose_name='Cargar PDF')),
                ('legajo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='legajos.legajo')),
            ],
            options={
                'verbose_name': 'Estudio Realizado',
                'verbose_name_plural': 'Estudios Realizados',
                'ordering': ['-fecha_expedicion'],
            },
        ),
        migrations.CreateModel(
            name='Desvinculacion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('documento', models.PositiveSmallIntegerField(choices=[(10, 'Informe de Gestión'), (20, 'Entrega de cargo/puesto'), (30, 'Liquidación de beneficios sociales y/o pensión'), (40, 'Carta de no renovación de contrato a plazo determinado'), (50, 'Otro Documento')], verbose_name='Desvinculación')),
                ('descripcion', models.CharField(blank=True, max_length=250, null=True)),
                ('fecha', models.DateField(blank=True, null=True)),
                ('pdf', models.FileField(upload_to='documentos_desvinculacion/', verbose_name='Cargar PDF')),
                ('legajo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='legajos.legajo')),
            ],
            options={
                'verbose_name': 'Desvinculación',
                'verbose_name_plural': 'Desvinculación',
                'ordering': ['documento'],
            },
        ),
        migrations.CreateModel(
            name='Desplazamiento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('documento', models.PositiveSmallIntegerField(choices=[(10, 'Resolución Administrativa'), (20, 'Resolución Directoral'), (30, 'Memorando')], verbose_name='Tipo de Documento')),
                ('numero', models.CharField(max_length=50, unique=True, verbose_name='Número')),
                ('tipo', models.PositiveSmallIntegerField(blank=True, choices=[(10, 'Designación'), (20, 'Rotación'), (30, 'Destaque'), (40, 'Encargatura')], null=True)),
                ('asunto', models.CharField(blank=True, max_length=100)),
                ('fecha', models.DateField(verbose_name='Fecha del Documento')),
                ('fecha_inicio', models.DateField(blank=True, null=True, verbose_name='Fecha de Inicio')),
                ('fecha_fin', models.DateField(blank=True, null=True, verbose_name='Fecha de Finalización')),
                ('condicion_laboral', models.CharField(choices=[('Nombrado', 'Nombrado'), ('Contratado', 'Contratado a Plazo Fijo'), ('CAS', 'Contrato Administrativo de Servicios')], max_length=100)),
                ('grupo_ocupacional', models.CharField(choices=[('Auxiliares', 'Auxiliares'), ('Funcionarios y Directivos', 'Funcionarios y Directivos'), ('Profesionales', 'Profesionales'), ('Profesionales de la Salud', 'Profesionales de la Salud'), ('Tecnicos', 'Tecnicos')], max_length=100)),
                ('cargo', models.CharField(blank=True, choices=[('ASISTENTE EJECUTIVO II', 'ASISTENTE EJECUTIVO II'), ('ASISTENTE EN SERVICIOS DE SALUD I', 'ASISTENTE EN SERVICIOS DE SALUD I'), ('ASISTENTE PROFESIONAL I', 'ASISTENTE PROFESIONAL I'), ('ASISTENTE/A ADMINISTRATIVO/A I', 'ASISTENTE/A ADMINISTRATIVO/A I'), ('AUXILIAR ADMINISTRATIVO/A', 'AUXILIAR ADMINISTRATIVO/A'), ('AUXILIAR ASISTENCIAL', 'AUXILIAR ASISTENCIAL'), ('DIRECTOR ADJUNTO', 'DIRECTOR ADJUNTO'), ('DIRECTOR DE HOSPITAL III', 'DIRECTOR DE HOSPITAL III'), ('DIRECTOR/A EJECUTIVO/A', 'DIRECTOR/A EJECUTIVO/A'), ('ENFERMERA/O', 'ENFERMERA/O'), ('ENFERMERA/O ESPECIALISTA', 'ENFERMERA/O ESPECIALISTA'), ('ESPECIALISTA ADMINISTRATIVO I', 'ESPECIALISTA ADMINISTRATIVO I'), ('ESPECIALISTA EN SALUD PUBLICA I', 'ESPECIALISTA EN SALUD PUBLICA I'), ('JEFE DE OFICINA', 'JEFE DE OFICINA'), ('JEFE DE ORGANO DE CONTROL INSTITUCIONAL', 'JEFE DE ORGANO DE CONTROL INSTITUCIONAL'), ('MEDICO', 'MEDICO'), ('MEDICO ESPECIALISTA', 'MEDICO ESPECIALISTA'), ('NUTRICIONISTA', 'NUTRICIONISTA'), ('ODONTOLOGO', 'ODONTOLOGO'), ('PILOTO DE AMBULANCIA', 'PILOTO DE AMBULANCIA'), ('PSICOLOGO', 'PSICOLOGO'), ('QUIMICO FARMACEUTICO', 'QUIMICO FARMACEUTICO'), ('TECNICO ADMINISTRATIVO I', 'TECNICO ADMINISTRATIVO I'), ('TECNICO ADMINISTRATIVO III', 'TECNICO ADMINISTRATIVO III'), ('TECNICO ASISTENCIAL', 'TECNICO ASISTENCIAL'), ('TECNICO EN ARCHIVO', 'TECNICO EN ARCHIVO'), ('TECNICO EN ENFERMERIA', 'TECNICO EN ENFERMERIA'), ('TECNICO EN ENFERMERIA I', 'TECNICO EN ENFERMERIA I'), ('TECNICO EN FARMACIA I', 'TECNICO EN FARMACIA I'), ('TECNICO EN LABORATORIO I', 'TECNICO EN LABORATORIO I'), ('TECNICO EN NUTRICION I', 'TECNICO EN NUTRICION I'), ('TECNICO EN PLANIFICACION', 'TECNICO EN PLANIFICACION'), ('TECNICO EN REHABILITACION', 'TECNICO EN REHABILITACION'), ('TECNICO EN SERVICIOS GENERALES I', 'TECNICO EN SERVICIOS GENERALES I'), ('TECNICO ESPECIALIZADO', 'TECNICO ESPECIALIZADO'), ('TECNICO/A ADMINISTRATIVO/A II', 'TECNICO/A ADMINISTRATIVO/A II'), ('TECNOLOGO MEDICO', 'TECNOLOGO MEDICO'), ('TRABAJADOR DE SERVICIOS GENERALES', 'TRABAJADOR DE SERVICIOS GENERALES'), ('TRABAJADOR SOCIAL', 'TRABAJADOR DE SERVICIOS GENERALES')], max_length=100, null=True)),
                ('nivel', models.CharField(blank=True, choices=[('CD-I', 'CD-I'), ('CD-V', 'CD-V'), ('ENF-10', 'ENF-10'), ('ENF-11', 'ENF-11'), ('ENF-12', 'ENF-12'), ('ENF-13', 'ENF-13'), ('ENF-14', 'ENF-14'), ('F-3', 'F-3'), ('F-4', 'F-4'), ('F-5', 'F-5'), ('G5-V', 'G5-V'), ('MC-1', 'MC-1'), ('MC-2', 'MC-2'), ('MC-3', 'MC-3'), ('MC-4', 'MC-4'), ('MC-5', 'MC-5'), ('OPS-IV', 'OPS-IV'), ('OPS-V', 'OPS-V'), ('OPS-VIII', 'OPS-VIII'), ('PS-IV', 'PS-IV'), ('PS-V', 'PS-V'), ('PS-VI', 'PS-VI'), ('PS-VII', 'PS-VII'), ('PS-VIII', 'PS-VIII'), ('SAA', 'SAA'), ('SAB', 'SAB'), ('SAC', 'SAC'), ('SAD', 'SAD'), ('SAF', 'SAF'), ('SPC', 'SPC'), ('SPD', 'SPD'), ('SPE', 'SPE'), ('SPF', 'SPF'), ('STA', 'STA'), ('STB', 'STB'), ('STC', 'STC'), ('STD', 'STD'), ('STE', 'STE'), ('STF', 'STF'), ('TM-1', 'TM-1'), ('TM-2', 'TM-2')], max_length=100, null=True)),
                ('plaza', models.CharField(blank=True, max_length=10, null=True)),
                ('pdf', models.FileField(upload_to='documentos_desplazamiento/', verbose_name='Cargar PDF')),
                ('legajo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='legajos.legajo')),
            ],
            options={
                'verbose_name': 'Desplazamiento',
                'verbose_name_plural': 'Desplazamiento',
                'ordering': ['-fecha'],
            },
        ),
        migrations.CreateModel(
            name='Curso',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('documento', models.PositiveSmallIntegerField(choices=[(10, 'Especialización'), (20, 'Diplomado'), (30, 'Congreso'), (40, 'Convención'), (50, 'Conferencia'), (60, 'Curso de capacitación'), (70, 'Seminario'), (80, 'Simposio'), (90, 'Charla'), (100, 'Taller'), (110, 'Certificado'), (120, 'Constancia')], verbose_name='Tipo de Documento')),
                ('descripcion', models.CharField(max_length=250)),
                ('inicio', models.DateField(blank=True, null=True)),
                ('fin', models.DateField(blank=True, null=True)),
                ('duracion', models.CharField(blank=True, max_length=250, null=True)),
                ('fecha_expedicion', models.DateField(blank=True, null=True)),
                ('pdf', models.FileField(upload_to='cursos/', verbose_name='Cargar PDF')),
                ('legajo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='legajos.legajo')),
            ],
            options={
                'verbose_name': 'Especializaciones, Diplomados, Cursos, Talleres',
                'verbose_name_plural': 'Especializaciones, Diplomados, Cursos, Talleres',
                'ordering': ['-fecha_expedicion'],
            },
        ),
        migrations.CreateModel(
            name='Compensaciones',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('documento', models.PositiveSmallIntegerField(choices=[(10, 'Resolución Administrativa'), (20, 'Resolución Directoral'), (30, 'Memorando')], verbose_name='Tipo de Documento')),
                ('numero', models.CharField(max_length=50, unique=True, verbose_name='Número')),
                ('motivo', models.CharField(max_length=50)),
                ('descripcion', models.CharField(blank=True, max_length=250)),
                ('fecha', models.DateField()),
                ('pdf', models.FileField(upload_to='compensaciones/', verbose_name='Cargar PDF')),
                ('legajo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='legajos.legajo')),
            ],
            options={
                'verbose_name': 'Compensación',
                'verbose_name_plural': 'Compensaciones',
            },
        ),
        migrations.CreateModel(
            name='Colegiatura',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('documento', models.PositiveSmallIntegerField(choices=[(10, 'Colegiatura'), (20, 'Habilitación Profesional'), (30, 'SERUM')], verbose_name='Tipo de Documento')),
                ('fecha_emision', models.DateField()),
                ('fecha_vigencia', models.DateField(blank=True, null=True, verbose_name='Válido Hasta')),
                ('pdf', models.FileField(upload_to='documentos_colegiatura/', verbose_name='Cargar PDF')),
                ('legajo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='legajos.legajo')),
            ],
            options={
                'verbose_name': 'Colegiatura',
                'verbose_name_plural': 'Colegiatura',
                'ordering': ['documento', '-fecha_emision'],
            },
        ),
        migrations.CreateModel(
            name='Movimientos',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('documento', models.CharField(max_length=50)),
                ('tipo', models.PositiveSmallIntegerField(blank=True, choices=[(10, 'LSGH'), (20, 'LCGH')], null=True, verbose_name='Tipo de Licencia')),
                ('motivo', models.CharField(max_length=50)),
                ('asunto', models.CharField(max_length=50)),
                ('desde', models.DateField(blank=True, null=True)),
                ('hasta', models.DateField(blank=True, null=True)),
                ('total_dias', models.PositiveIntegerField(blank=True, null=True, verbose_name='Total de Días')),
                ('pdf', models.FileField(upload_to='movimientos_personal/', verbose_name='Cargar PDF')),
                ('legajo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='legajos.legajo')),
            ],
            options={
                'verbose_name': 'Movimientos del Personal',
                'verbose_name_plural': 'Movimientos del Personal',
                'ordering': ['-desde'],
            },
        ),
        migrations.CreateModel(
            name='Otro',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('documento', models.CharField(max_length=250)),
                ('descripcion', models.CharField(blank=True, max_length=500, null=True)),
                ('fecha', models.DateField(blank=True, null=True)),
                ('pdf', models.FileField(upload_to='documentos_desvinculacion/', verbose_name='Cargar PDF')),
                ('legajo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='legajos.legajo')),
            ],
            options={
                'verbose_name': 'Otro Documento',
                'verbose_name_plural': 'Otros Documentos',
                'ordering': ['documento'],
            },
        ),
        migrations.CreateModel(
            name='Progresion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('documento', models.PositiveSmallIntegerField(choices=[(10, 'Resolución Administrativa'), (20, 'Resolución Directoral'), (30, 'Memorando')], verbose_name='Tipo de Documento')),
                ('numero', models.CharField(blank=True, max_length=100, null=True, verbose_name='Número')),
                ('motivo', models.CharField(blank=True, max_length=300, null=True, verbose_name='Motivo')),
                ('descripcion', models.CharField(blank=True, max_length=100, null=True, verbose_name='Descripción')),
                ('fecha', models.DateField(verbose_name='Fecha del Documento')),
                ('fecha_inicio', models.DateField(blank=True, null=True, verbose_name='Fecha de Inicio')),
                ('nivel', models.CharField(blank=True, choices=[('CD-I', 'CD-I'), ('CD-V', 'CD-V'), ('ENF-10', 'ENF-10'), ('ENF-11', 'ENF-11'), ('ENF-12', 'ENF-12'), ('ENF-13', 'ENF-13'), ('ENF-14', 'ENF-14'), ('F-3', 'F-3'), ('F-4', 'F-4'), ('F-5', 'F-5'), ('G5-V', 'G5-V'), ('MC-1', 'MC-1'), ('MC-2', 'MC-2'), ('MC-3', 'MC-3'), ('MC-4', 'MC-4'), ('MC-5', 'MC-5'), ('OPS-IV', 'OPS-IV'), ('OPS-V', 'OPS-V'), ('OPS-VIII', 'OPS-VIII'), ('PS-IV', 'PS-IV'), ('PS-V', 'PS-V'), ('PS-VI', 'PS-VI'), ('PS-VII', 'PS-VII'), ('PS-VIII', 'PS-VIII'), ('SAA', 'SAA'), ('SAB', 'SAB'), ('SAC', 'SAC'), ('SAD', 'SAD'), ('SAF', 'SAF'), ('SPC', 'SPC'), ('SPD', 'SPD'), ('SPE', 'SPE'), ('SPF', 'SPF'), ('STA', 'STA'), ('STB', 'STB'), ('STC', 'STC'), ('STD', 'STD'), ('STE', 'STE'), ('STF', 'STF'), ('TM-1', 'TM-1'), ('TM-2', 'TM-2')], max_length=100, null=True)),
                ('pdf', models.FileField(upload_to='documentos_progresion/', verbose_name='Cargar PDF')),
                ('legajo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='legajos.legajo')),
            ],
            options={
                'verbose_name': 'Progresión en la Carrera',
                'verbose_name_plural': 'Progresión en la Carrera',
                'ordering': ['documento'],
            },
        ),
        migrations.CreateModel(
            name='Prueba',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('documento', models.PositiveSmallIntegerField(choices=[(10, 'Evaluación y resultados del período de prueba')], verbose_name='Tipo de Documento')),
                ('fecha', models.DateField(blank=True, null=True)),
                ('pdf', models.FileField(upload_to='documentos_prueba/', verbose_name='Cargar PDF')),
                ('legajo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='legajos.legajo')),
            ],
            options={
                'verbose_name': 'Período de Prueba',
                'verbose_name_plural': 'Período de Prueba',
                'ordering': ['documento'],
            },
        ),
        migrations.CreateModel(
            name='Reconocimiento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('documento_reconocimiento', models.PositiveSmallIntegerField(choices=[(10, 'Reconocimiento'), (20, 'Sanción')], verbose_name='Reconocimientos y Sanciones')),
                ('documento', models.PositiveSmallIntegerField(choices=[(10, 'Resolución Administrativa'), (20, 'Resolución Directoral'), (30, 'Memorando')], verbose_name='Tipo de Documento')),
                ('numero', models.CharField(blank=True, max_length=50, null=True, verbose_name='Número')),
                ('descripcion', models.CharField(blank=True, max_length=250, null=True)),
                ('fecha', models.DateField(blank=True, null=True, verbose_name='Fecha del Documento')),
                ('desde', models.DateField(blank=True, null=True, verbose_name='Fecha de Inicio')),
                ('hasta', models.DateField(blank=True, null=True, verbose_name='Fecha de Finalización')),
                ('total_dias', models.PositiveIntegerField(blank=True, null=True, verbose_name='Total de Días')),
                ('pdf', models.FileField(upload_to='documentos_reconocimiento/', verbose_name='Cargar PDF')),
                ('legajo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='legajos.legajo')),
            ],
            options={
                'verbose_name': 'Reconocimientos y Sanciones',
                'verbose_name_plural': 'Reconocimientos y Sanciones',
                'ordering': ['documento'],
            },
        ),
        migrations.CreateModel(
            name='Seguridad',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('documento', models.PositiveSmallIntegerField(choices=[(10, 'Cargo de entrega del Reglamento de SST'), (20, 'Registro de entrenamiento, y simulacros de emergencias'), (30, 'Capacitaciones brindadas por la entidad'), (40, 'Trámites y gestiones de seguro'), (50, 'Trámites y gestiones de subsidios'), (60, 'Descanso Médico'), (70, 'Afiliaciones a Entidades Prestadoras de Salud (EPS)'), (80, 'Otro Documento')], verbose_name='Tipo de Documento')),
                ('descripcion', models.CharField(blank=True, max_length=250, null=True)),
                ('fecha', models.DateField(blank=True, null=True, verbose_name='Fecha del Documento')),
                ('fecha_inicio', models.DateField(blank=True, null=True, verbose_name='Fecha de Inicio')),
                ('fecha_fin', models.DateField(blank=True, null=True, verbose_name='Fecha de Finalización')),
                ('total_dias', models.PositiveIntegerField(blank=True, null=True, verbose_name='Total de Días')),
                ('pdf', models.FileField(upload_to='documentos_sst/', verbose_name='Cargar PDF')),
                ('legajo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='legajos.legajo')),
            ],
            options={
                'verbose_name': 'SST y Bienestar social',
                'verbose_name_plural': 'SST y Bienestar social',
                'ordering': ['documento'],
            },
        ),
        migrations.CreateModel(
            name='Seleccion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('documento', models.CharField(choices=[('Resultado Final de proceso de selección', 'Resultado Final de proceso de selección'), ('Informe de la Oficina de Personal', 'Informe de la Oficina de Personal'), ('Otro Documento', 'Otro Documento')], max_length=100, verbose_name='Tipo de Documento')),
                ('documento_otro', models.CharField(blank=True, max_length=100, verbose_name='Especificar otro documento')),
                ('fecha', models.DateField(blank=True, null=True)),
                ('descripcion', models.CharField(blank=True, max_length=250, verbose_name='Descripción')),
                ('pdf', models.FileField(upload_to='documentos_seleccion/', verbose_name='Cargar PDF')),
                ('legajo', models.ManyToManyField(to='legajos.legajo')),
            ],
            options={
                'verbose_name': 'Proceso de Selección',
                'verbose_name_plural': 'Proceso de Selección',
                'ordering': ['documento'],
            },
        ),
        migrations.CreateModel(
            name='Subespecialidad',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('inicio', models.DateField()),
                ('fin', models.DateField()),
                ('documento', models.PositiveSmallIntegerField(choices=[(10, 'Especialidad'), (20, 'Subespecialidad')], verbose_name='Especialidad o Subespecialidad')),
                ('mencion', models.CharField(max_length=50, verbose_name='Mención')),
                ('cod_especialidad', models.CharField(blank=True, max_length=50, null=True, verbose_name='Nº de RNE')),
                ('fecha_expedicion', models.DateField(blank=True, null=True)),
                ('pdf', models.FileField(upload_to='formacion_academica/', verbose_name='Cargar PDF')),
                ('legajo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='legajos.legajo')),
            ],
            options={
                'verbose_name': 'Subespecialidad',
                'verbose_name_plural': 'Subespecialidad',
                'ordering': ['-fecha_expedicion'],
            },
        ),
        migrations.CreateModel(
            name='Vinculo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('documento', models.PositiveSmallIntegerField(choices=[(10, 'Resolución Administrativa'), (20, 'Resolución Directoral'), (30, 'Memorando')], verbose_name='Tipo de Documento')),
                ('numero', models.CharField(max_length=50, unique=True, verbose_name='Número')),
                ('tipo', models.PositiveSmallIntegerField(blank=True, choices=[(10, 'Nombramiento'), (20, 'Contrato'), (30, 'Adenda'), (40, 'Destaque de otra Dependencia'), (50, 'Designación de otra Dependencia')], null=True)),
                ('descripcion', models.CharField(blank=True, max_length=100, verbose_name='Descripción')),
                ('fecha', models.DateField(verbose_name='Fecha del Documento')),
                ('fecha_inicio', models.DateField(verbose_name='Fecha de Inicio de Vínculo')),
                ('fecha_fin', models.DateField(blank=True, null=True, verbose_name='Fecha de Finalización')),
                ('condicion_laboral', models.CharField(choices=[('Nombrado', 'Nombrado'), ('Contratado', 'Contratado a Plazo Fijo'), ('CAS', 'Contrato Administrativo de Servicios')], max_length=100)),
                ('grupo_ocupacional', models.CharField(choices=[('Auxiliares', 'Auxiliares'), ('Funcionarios y Directivos', 'Funcionarios y Directivos'), ('Profesionales', 'Profesionales'), ('Profesionales de la Salud', 'Profesionales de la Salud'), ('Tecnicos', 'Tecnicos')], max_length=100)),
                ('cargo', models.CharField(blank=True, choices=[('ASISTENTE EJECUTIVO II', 'ASISTENTE EJECUTIVO II'), ('ASISTENTE EN SERVICIOS DE SALUD I', 'ASISTENTE EN SERVICIOS DE SALUD I'), ('ASISTENTE PROFESIONAL I', 'ASISTENTE PROFESIONAL I'), ('ASISTENTE/A ADMINISTRATIVO/A I', 'ASISTENTE/A ADMINISTRATIVO/A I'), ('AUXILIAR ADMINISTRATIVO/A', 'AUXILIAR ADMINISTRATIVO/A'), ('AUXILIAR ASISTENCIAL', 'AUXILIAR ASISTENCIAL'), ('DIRECTOR ADJUNTO', 'DIRECTOR ADJUNTO'), ('DIRECTOR DE HOSPITAL III', 'DIRECTOR DE HOSPITAL III'), ('DIRECTOR/A EJECUTIVO/A', 'DIRECTOR/A EJECUTIVO/A'), ('ENFERMERA/O', 'ENFERMERA/O'), ('ENFERMERA/O ESPECIALISTA', 'ENFERMERA/O ESPECIALISTA'), ('ESPECIALISTA ADMINISTRATIVO I', 'ESPECIALISTA ADMINISTRATIVO I'), ('ESPECIALISTA EN SALUD PUBLICA I', 'ESPECIALISTA EN SALUD PUBLICA I'), ('JEFE DE OFICINA', 'JEFE DE OFICINA'), ('JEFE DE ORGANO DE CONTROL INSTITUCIONAL', 'JEFE DE ORGANO DE CONTROL INSTITUCIONAL'), ('MEDICO', 'MEDICO'), ('MEDICO ESPECIALISTA', 'MEDICO ESPECIALISTA'), ('NUTRICIONISTA', 'NUTRICIONISTA'), ('ODONTOLOGO', 'ODONTOLOGO'), ('PILOTO DE AMBULANCIA', 'PILOTO DE AMBULANCIA'), ('PSICOLOGO', 'PSICOLOGO'), ('QUIMICO FARMACEUTICO', 'QUIMICO FARMACEUTICO'), ('TECNICO ADMINISTRATIVO I', 'TECNICO ADMINISTRATIVO I'), ('TECNICO ADMINISTRATIVO III', 'TECNICO ADMINISTRATIVO III'), ('TECNICO ASISTENCIAL', 'TECNICO ASISTENCIAL'), ('TECNICO EN ARCHIVO', 'TECNICO EN ARCHIVO'), ('TECNICO EN ENFERMERIA', 'TECNICO EN ENFERMERIA'), ('TECNICO EN ENFERMERIA I', 'TECNICO EN ENFERMERIA I'), ('TECNICO EN FARMACIA I', 'TECNICO EN FARMACIA I'), ('TECNICO EN LABORATORIO I', 'TECNICO EN LABORATORIO I'), ('TECNICO EN NUTRICION I', 'TECNICO EN NUTRICION I'), ('TECNICO EN PLANIFICACION', 'TECNICO EN PLANIFICACION'), ('TECNICO EN REHABILITACION', 'TECNICO EN REHABILITACION'), ('TECNICO EN SERVICIOS GENERALES I', 'TECNICO EN SERVICIOS GENERALES I'), ('TECNICO ESPECIALIZADO', 'TECNICO ESPECIALIZADO'), ('TECNICO/A ADMINISTRATIVO/A II', 'TECNICO/A ADMINISTRATIVO/A II'), ('TECNOLOGO MEDICO', 'TECNOLOGO MEDICO'), ('TRABAJADOR DE SERVICIOS GENERALES', 'TRABAJADOR DE SERVICIOS GENERALES'), ('TRABAJADOR SOCIAL', 'TRABAJADOR DE SERVICIOS GENERALES')], max_length=100, null=True)),
                ('nivel', models.CharField(blank=True, choices=[('CD-I', 'CD-I'), ('CD-V', 'CD-V'), ('ENF-10', 'ENF-10'), ('ENF-11', 'ENF-11'), ('ENF-12', 'ENF-12'), ('ENF-13', 'ENF-13'), ('ENF-14', 'ENF-14'), ('F-3', 'F-3'), ('F-4', 'F-4'), ('F-5', 'F-5'), ('G5-V', 'G5-V'), ('MC-1', 'MC-1'), ('MC-2', 'MC-2'), ('MC-3', 'MC-3'), ('MC-4', 'MC-4'), ('MC-5', 'MC-5'), ('OPS-IV', 'OPS-IV'), ('OPS-V', 'OPS-V'), ('OPS-VIII', 'OPS-VIII'), ('PS-IV', 'PS-IV'), ('PS-V', 'PS-V'), ('PS-VI', 'PS-VI'), ('PS-VII', 'PS-VII'), ('PS-VIII', 'PS-VIII'), ('SAA', 'SAA'), ('SAB', 'SAB'), ('SAC', 'SAC'), ('SAD', 'SAD'), ('SAF', 'SAF'), ('SPC', 'SPC'), ('SPD', 'SPD'), ('SPE', 'SPE'), ('SPF', 'SPF'), ('STA', 'STA'), ('STB', 'STB'), ('STC', 'STC'), ('STD', 'STD'), ('STE', 'STE'), ('STF', 'STF'), ('TM-1', 'TM-1'), ('TM-2', 'TM-2')], max_length=100, null=True)),
                ('plaza', models.CharField(blank=True, max_length=10, null=True)),
                ('pdf', models.FileField(upload_to='documentos_vinculo/', verbose_name='Cargar PDF')),
                ('legajo', models.ManyToManyField(to='legajos.legajo')),
            ],
            options={
                'verbose_name': 'Formalización de Vínculo',
                'verbose_name_plural': 'Formalización de Vínculo',
                'ordering': ['-fecha'],
            },
        ),
        migrations.CreateModel(
            name='Retencion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('documento', models.PositiveSmallIntegerField(choices=[(10, 'Exoneración de retención de cuarta categoría'), (20, 'Exoneración de retención de quinta categoría')], verbose_name='Tipo de Documento')),
                ('fecha', models.DateTimeField(blank=True, null=True)),
                ('pdf', models.FileField(upload_to='documentos_retencion/', verbose_name='Cargar PDF')),
                ('legajo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='legajos.legajo')),
            ],
            options={
                'verbose_name': 'Exoneración de Retención',
                'verbose_name_plural': 'Exoneración de Retención',
                'ordering': ['documento'],
                'unique_together': {('legajo', 'documento')},
            },
        ),
    ]
